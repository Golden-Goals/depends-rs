---
source: depends_core/src/macros/dependencies.rs
assertion_line: 193
expression: format_source(derive_dependencies(input).to_string().as_str())
---
pub struct CustomRefName<'a> {
    bar: <Vec<usize> as ::depends::core::Resolve>::Output<'a>,
}
impl Foo {
    pub fn new(bar: Vec<usize>) -> Self {
        Self { bar }
    }
}
impl ::depends::core::Resolve for Foo {
    type Output < 'a > = CustomRefName < 'a > where Self : 'a ;

    fn resolve(&self, visitor: &mut impl ::depends::core::Visitor) -> Self::Output<'_> {
        visitor.mark_edge(&self.bar);
        CustomRefName {
            bar: self.bar.resolve(visitor),
        }
    }
}
impl<'a> ::depends::core::IsDirty for CustomRefName<'a> {
    fn is_dirty(&self) -> bool {
        self.bar.is_dirty()
    }
}

